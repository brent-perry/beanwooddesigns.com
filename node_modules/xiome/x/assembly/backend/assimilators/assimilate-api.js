import * as renraku from "renraku";
import { authApi } from "../../../features/auth/auth-api.js";
import { notesApi } from "../../../features/notes/api/notes-api.js";
import { videosApi } from "../../../features/videos/api/videos-api.js";
import { exampleApi } from "../../../features/example/api/example-api.js";
import { questionsApi } from "../../../features/questions/api/questions-api.js";
import { prepareAuthPolicies } from "../../../features/auth/policies/prepare-auth-policies.js";
import { makeAdministrativeApi } from "../../../features/administrative/api/administrative-api.js";
import { standardNicknameGenerator } from "../../../features/auth/utils/nicknames/standard-nickname-generator.js";
export async function assimilateApi({ config, rando, databaseRaw, dacastSdk, sendLoginEmail, signToken, verifyToken, }) {
    const generateNickname = standardNicknameGenerator({ rando });
    const authPolicies = prepareAuthPolicies({
        config,
        databaseRaw,
        verifyToken,
    });
    return renraku.api({
        auth: authApi({
            rando,
            config,
            authPolicies,
            signToken,
            verifyToken,
            sendLoginEmail,
            generateNickname,
        }),
        administrative: makeAdministrativeApi({
            config,
            authPolicies,
        }),
        questions: questionsApi({
            rando,
            config,
            authPolicies,
        }),
        example: exampleApi({
            rando,
            config,
            authPolicies,
        }),
        videos: videosApi({
            config,
            dacastSdk,
            authPolicies,
        }),
        notes: notesApi({
            config,
            authPolicies,
        })
    });
}
//# sourceMappingURL=assimilate-api.js.map